# =================== AUTENTICAÇÃO ===================

### Registar um utilizador
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
    "nome": "Rodrigo Martins",
    "email": "rodrigo@gmail.com",
    "password": "123456"
}

### Login de utilizador
POST http://localhost:5000/api/auth/login
Content-Type: application/json

{
    "email": "rodrigo@gmail.com",
    "password": "123456"
}

# ===================================================
# =================== UTILIZADORES ===================
# ===================================================

### Obter perfil do utilizador autenticado
GET http://localhost:5000/api/users/profile
Authorization: Bearer <TOKEN>

### Atualizar perfil do utilizador autenticado
PUT http://localhost:5000/api/users/profile
Content-Type: application/json
Authorization: Bearer <TOKEN>

{
    "nome": "Rodrigo Atualizado",
    "email": "rodrigo_novo@email.com",
    "profilePic": "https://example.com/nova-foto.png"
}

### Eliminar a conta do utilizador autenticado
DELETE http://localhost:5000/api/users/profile
Authorization: Bearer <TOKEN>

# ===================================================
# ============== GESTÃO DE UTILIZADORES (ADMIN) ==============
# ===================================================

### Listar todos os utilizadores (ADMIN)
GET http://localhost:5000/api/admin/users
Authorization: Bearer <TOKEN_ADMIN>

### Obter um utilizador por ID (ADMIN)
GET http://localhost:5000/api/admin/users/<ID_DO_UTILIZADOR>
Authorization: Bearer <TOKEN_ADMIN>

### Eliminar um utilizador (ADMIN)
DELETE http://localhost:5000/api/admin/users/<ID_DO_UTILIZADOR>
Authorization: Bearer <TOKEN_ADMIN>

# ===================================================
# =================== QUARTOS ===================
# ===================================================

### Criar um quarto (ADMIN)
POST http://localhost:5000/api/admin/rooms
Content-Type: application/json
Authorization: Bearer <TOKEN_ADMIN>

{
    "nome": "Suite Luxo",
    "descricao": "Quarto espaçoso com vista para o mar.",
    "imagem": "https://example.com/suite-luxo.jpg",
    "numeroQuarto": "101",
    "precoPorNoite": 150,
    "status": "disponível"
}

### Listar todos os quartos (PÚBLICO)
GET http://localhost:5000/api/rooms

### Obter um quarto por ID (PÚBLICO)
GET http://localhost:5000/api/rooms/<ID_DO_QUARTO>

### Listar todos os quartos (ADMIN)
GET http://localhost:5000/api/admin/rooms
Authorization: Bearer <TOKEN_ADMIN>

### Obter um quarto por ID (ADMIN)
GET http://localhost:5000/api/admin/rooms/<ID_DO_QUARTO>
Authorization: Bearer <TOKEN_ADMIN>

### Atualizar um quarto (ADMIN)
PUT http://localhost:5000/api/admin/rooms/<ID_DO_QUARTO>
Content-Type: application/json
Authorization: Bearer <TOKEN_ADMIN>

{
    "precoPorNoite": 180
}

### Eliminar um quarto (ADMIN)
DELETE http://localhost:5000/api/admin/rooms/<ID_DO_QUARTO>
Authorization: Bearer <TOKEN_ADMIN>

# ===================================================
# =================== RESERVAS ===================
# ===================================================

### Criar uma reserva (UTILIZADOR)
POST http://localhost:5000/api/reservations
Content-Type: application/json
Authorization: Bearer <TOKEN>

{
    "quarto": "<ID_DO_QUARTO>",
    "dataCheckIn": "2025-03-01",
    "dataCheckOut": "2025-03-07"
}

### Listar reservas do utilizador autenticado
GET http://localhost:5000/api/reservations
Authorization: Bearer <TOKEN>

### Obter detalhes de uma reserva específica do utilizador autenticado
GET http://localhost:5000/api/reservations/<ID_DA_RESERVA>
Authorization: Bearer <TOKEN>

### Cancelar uma reserva do utilizador autenticado
DELETE http://localhost:5000/api/reservations/<ID_DA_RESERVA>
Authorization: Bearer <TOKEN>

# ===================================================
# =========== GESTÃO DE RESERVAS (ADMIN) ===========
# ===================================================

### Listar todas as reservas (ADMIN)
GET http://localhost:5000/api/admin/reservations
Authorization: Bearer <TOKEN_ADMIN>

### Obter uma reserva por ID (ADMIN)
GET http://localhost:5000/api/admin/reservations/<ID_DA_RESERVA>
Authorization: Bearer <TOKEN_ADMIN>

### Obter reservas por utilizador (ADMIN)
GET http://localhost:5000/api/admin/reservations/user/<ID_DO_UTILIZADOR>
Authorization: Bearer <TOKEN_ADMIN>

### Obter reservas por quarto (ADMIN)
GET http://localhost:5000/api/admin/reservations/room/<ID_DO_QUARTO>
Authorization: Bearer <TOKEN_ADMIN>

### Atualizar uma reserva (ADMIN) - Alterar status e pagamento
PUT http://localhost:5000/api/admin/reservations/<ID_DA_RESERVA>
Content-Type: application/json
Authorization: Bearer <TOKEN_ADMIN>

{
    "status": "confirmada",
    "pago": true
}

### Eliminar uma reserva (ADMIN)
DELETE http://localhost:5000/api/admin/reservations/<ID_DA_RESERVA>
Authorization: Bearer <TOKEN_ADMIN>

# ===================================================
# =================== REVIEWS ===================
# ===================================================

### Criar uma review (UTILIZADOR)
POST http://localhost:5000/api/reviews
Content-Type: application/json
Authorization: Bearer <TOKEN>

{
    "quarto": "<ID_DO_QUARTO>",
    "classificacao": 5,
    "comentario": "Ótima estadia, recomendo!"
}

### Listar todas as reviews de um quarto
GET http://localhost:5000/api/reviews/<ID_DO_QUARTO>

### Eliminar uma review do próprio utilizador
DELETE http://localhost:5000/api/reviews/<ID_DA_REVIEW>
Authorization: Bearer <TOKEN>

# ===================================================
# ========== GESTÃO DE REVIEWS (ADMIN) ==========
# ===================================================

### Listar todas as reviews (ADMIN)
GET http://localhost:5000/api/admin/reviews
Authorization: Bearer <TOKEN_ADMIN>

### Obter uma review por ID (ADMIN)
GET http://localhost:5000/api/admin/reviews/<ID_DA_REVIEW>
Authorization: Bearer <TOKEN_ADMIN>

### Obter reviews de um quarto (ADMIN)
GET http://localhost:5000/api/admin/reviews/room/<ID_DO_QUARTO>
Authorization: Bearer <TOKEN_ADMIN>

### Obter reviews de um utilizador (ADMIN)
GET http://localhost:5000/api/admin/reviews/user/<ID_DO_UTILIZADOR>
Authorization: Bearer <TOKEN_ADMIN>

### Eliminar uma review (ADMIN)
DELETE http://localhost:5000/api/admin/reviews/<ID_DA_REVIEW>
Authorization: Bearer <TOKEN_ADMIN>
